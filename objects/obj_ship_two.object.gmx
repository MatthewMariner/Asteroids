<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ship_two</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_par_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Checks collision with player object - ensures no objects spawn on player
while (distance_to_object(obj_player) &lt;100)
{
    x = random(room_width);
    y = random(room_height);
}




/// create
event_inherited();
hp = 10;
damage = 1;
timer = 0;
state = "MOVING";
facing = enum_facing.down;
move_speed = 2;
image_speed = .4;

//directions + speed
direction = random(360);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.points = global.points + 500;

//sound
audio_play_sound(snd_explode,0,0);
instance_create(x, y, obj_enemy_death);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

switch(state) {
    case "MOVING": {
        switch(facing) {
            case enum_facing.up: {
                vx = 0;
                vy = -move_speed;
                facing = facing - 180;
                break;
            }
            case enum_facing.right: {
                vx = move_speed;
                vy = 0;
                facing = facing - 180;
                break;
            }
            case enum_facing.down: {
                vx = 0;
                vy = move_speed;
                facing = facing - 180;
                break;
            }
            case enum_facing.left: {
                vx = -move_speed;
                vy = 0;
                facing = facing - 180;
                break;
            }
        }
        
        if (irandom(100) &lt; 1) facing = choose(enum_facing.up, enum_facing.right, enum_facing.down, enum_facing.left);
        if (irandom(300) &lt; 1) {
            state = "SHOOTING";
            timer = 0;
        }
        image_angle = facing - 90;
        break;
    }
    case "SHOOTING": {
        vx = 0;
        vy = 0;
        
        if (timer &lt; 90) {
            if (timer == 60) {
                with (instance_create(x, y, obj_projectile)) {
                    //direction = other.facing;
                    if(obj_player)
                    {
                        direction = point_direction(x,y, obj_player.x, obj_player.y);
                    } 
                    else 
                    {
                        direction = other.facing;
                    }
                    
                    speed = 10;
                }
            }
            timer ++;
        } else {
            state = "MOVING";
        }
        break;
    }
}


if ( check_collision_obj(vx, vy, obj_solid) ) 
{
    facing = choose(enum_facing.up, enum_facing.right, enum_facing.down, enum_facing.left);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = spr_ship_two_s;


if (iframes == 0) 
{

    if ((obj_ship_two.hp) &gt; 0)
    {
        (obj_ship_two.hp) = obj_ship_two.hp - other.damage;
    }
    
    if ((obj_ship_two.hp) &lt;= 0)
    {
        //Hack?
        io_clear();
        instance_destroy();   
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == spr_player)
{
    
    //DeadPlayer Animation
    var randomAngle = random(360);
    var o;
    o = instance_create(x,y,obj_deadplayer);
    o.angle = 0 + randomAngle;
    o = instance_create(x,y,obj_deadplayer);
    o.angle = 120 + randomAngle;
    o = instance_create(x,y,obj_deadplayer);
    o.angle = 240 + randomAngle;
    
    with (obj_deadplayer)
    {
        direction = angle;
        image_angle = angle;
        speed = 3;    
    }
    
    audio_play_sound(snd_explode, 10, 0);
    
    if (global.life &gt; 0) 
    {
        global.life -= 1;
        instance_create(room_width/2, room_height/2, obj_player);
    }
    else
    {
        //shows game over screen
        instance_create(0,0,obj_gameover);
    }
    
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>112</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_wrap</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
